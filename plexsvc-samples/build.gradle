sourceCompatibility = '1.7'

apply plugin: 'application'
mainClassName = 'com.plexobject.bugger.Main'


//rootProject.name = 'plexsvc-framework'

dependencies {
  compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.7'
    compile 'org.apache.activemq:activemq-all:5.10.0'

    compile 'com.google.guava:guava:17.0'
    compile 'org.xerial:sqlite-jdbc:3.7.2'

    compile project(':plexsvc-framework')
    testCompile 'junit:junit:4.11'
}


run {
  if(project.hasProperty('args')){
    args project.args.split('\\s+')
  }
  systemProperties = [
    "com.sun.management.jmxremote.ssl":"false",
    "com.sun.management.jmxremote.authenticate":"false",
    "com.sun.management.jmxremote.port":"9191",
  ]
}

task eb(type:JavaExec) {
  main = 'com.plexobject.bugger.EBBridgeMain'
  classpath = sourceSets.main.runtimeClasspath
  //args project.args.split('\\s+')
  args "bugger.properties,eb_jms_services_mapping.json".split(",")
  systemProperties = [
    "com.sun.management.jmxremote.ssl":"false",
    "com.sun.management.jmxremote.authenticate":"false",
    "com.sun.management.jmxremote.port":"9292",
  ]
}

task bugger(type:JavaExec) {
  main = 'com.plexobject.bugger.Main'
  classpath = sourceSets.main.runtimeClasspath
  //args project.args.split('\\s+')
  args "bugger.properties,http_jms_services_mapping.json".split(",")
  systemProperties = [
    "com.sun.management.jmxremote.ssl":"false",
    "com.sun.management.jmxremote.authenticate":"false",
    "com.sun.management.jmxremote.port":"9393",
  ]
}

task quote(type:JavaExec) {
  main = 'com.plexobject.stock.QuoteServer'
  classpath = sourceSets.main.runtimeClasspath
  //args project.args.split('\\s+')
  args "bugger.properties,http_jms_services_mapping.json".split(",")
  systemProperties = [
    "com.sun.management.jmxremote.ssl":"false",
    "com.sun.management.jmxremote.authenticate":"false",
    "com.sun.management.jmxremote.port":"9191",
  ]
}



jar {
  manifest {
    attributes 'Implementation-Title': 'PlexService', 'Implementation-Version': version
  }
}

task dist(type: Copy) {
   into "$buildDir/dist/lib"
   from configurations.runtime
}
